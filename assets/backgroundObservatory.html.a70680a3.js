import{_ as o,o as e,c,e as t}from"./app.227ece11.js";const d={},u=t('<h1 id="后台连接观测" tabindex="-1"><a class="header-anchor" href="#后台连接观测" aria-hidden="true">#</a> 后台连接观测</h1><p>后台连接观测服务通过定时通过指定的出站连接建立连接来确定出站代理的状态。</p><blockquote><p><code>subjectSelector</code>: string</p></blockquote><p>一个字符串数组，其中每一个字符串将用于和出站协议标识的前缀匹配。在以下几个出站协议标识中：<code>[ &quot;a&quot;, &quot;ab&quot;, &quot;c&quot;, &quot;ba&quot; ]</code>，<code>&quot;subjectSelector&quot;: [&quot;a&quot;]</code> 将匹配到 <code>[ &quot;a&quot;, &quot;ab&quot; ]</code>。</p><p>被匹配到的出站连接将被定时连接以确定是否可用。</p><blockquote><p><code>probeUrl</code>: string</p></blockquote><p>用于检测连接状态的网址。默认会使用内构的连接状态检测地址。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>此目标地址的服务器可以推断出您使用了本程序。如果您使用了第三方提供的服务器，该服务器的运营商可能基于此信息作出不利于您的决定，如展示更多验证码，拒绝服务或封禁您的帐号。</p></div><blockquote><p><code>probeInterval</code>: number</p></blockquote><p>发起探测的间隔。每经过这个时间，就会对一个服务器进行服务器状态检测。时间格式为数字+单位，比如<code>&quot;10s&quot;</code>, <code>&quot;2h45m&quot;</code>，支持的时间单位有 <code>ns</code>, <code>us</code>, <code>ms</code>, <code>s</code>, <code>m</code>, <code>h</code>， 分别对应纳秒、微秒、毫秒、秒、分、时。</p>',10),a=[u];function r(s,n){return e(),c("div",null,a)}const q=o(d,[["render",r],["__file","backgroundObservatory.html.vue"]]);export{q as default};
