import{_ as o,o as e,c,e as t}from"./app.56883166.js";const d={},u=t('<h1 id="并发连接观测" tabindex="-1"><a class="header-anchor" href="#并发连接观测" aria-hidden="true">#</a> 并发连接观测</h1><p>并发连接观测服务。</p><blockquote><p><code>subjectSelector</code>: string</p></blockquote><p>一个字符串数组，其中每一个字符串将用于和出站协议标识的前缀匹配。在以下几个出站协议标识中：<code>[ &quot;a&quot;, &quot;ab&quot;, &quot;c&quot;, &quot;ba&quot; ]</code>，<code>&quot;subjectSelector&quot;: [&quot;a&quot;]</code> 将匹配到 <code>[ &quot;a&quot;, &quot;ab&quot; ]</code>。</p><blockquote><p><code>pingConfig</code>: <a href="#PingConfigObject">PingConfigObject</a></p></blockquote><h3 id="pingconfigobject" tabindex="-1"><a class="header-anchor" href="#pingconfigobject" aria-hidden="true">#</a> PingConfigObject</h3><blockquote><p><code>destination</code>: string</p></blockquote><p>Ping destination URL. It should return 204 on success.</p><blockquote><p><code>connectivity</code>: string</p></blockquote><p>Connectivity check URL.</p><blockquote><p><code>interval</code>: number</p></blockquote><p>发起健康检查的事件间隔, 时间格式为数字+单位，比如<code>&quot;10s&quot;</code>, <code>&quot;2h45m&quot;</code>，支持的时间单位有 <code>ns</code>, <code>us</code>, <code>ms</code>, <code>s</code>, <code>m</code>, <code>h</code>， 分别对应纳秒、微秒、毫秒、秒、分、时。</p><blockquote><p><code>samplingCount</code>: number</p></blockquote><p>保留的最近 Ping 结果的数量。</p><blockquote><p><code>timeout</code>: number</p></blockquote><p>Ping 超时时间, 时间格式为数字+单位，比如<code>&quot;10s&quot;</code>, <code>&quot;2h45m&quot;</code>。</p>',16),n=[u];function i(a,r){return e(),c("div",null,n)}const q=o(d,[["render",i],["__file","burstObservatory.html.vue"]]);export{q as default};
