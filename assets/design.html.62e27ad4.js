import{_ as i}from"./arch.c1da8eb0.js";import{_ as s,r as o,o as d,c as l,a as e,b as t,d as r,w as h,e as c}from"./app.c6802c3c.js";const p={},u=c('<h1 id="step-2-understand-the-architecture" tabindex="-1"><a class="header-anchor" href="#step-2-understand-the-architecture" aria-hidden="true">#</a> Step 2: Understand the architecture</h1><p>This article describes the design ideas of the V2Ray core (v2ray-core).</p><h2 id="objectives" tabindex="-1"><a class="header-anchor" href="#objectives" aria-hidden="true">#</a> Objectives</h2><ul><li>The V2Ray kernel provides a platform that supports the necessary network proxy functions, on top of which can be further developed to provide a better user experience;</li><li>Take cross-platform as the primary principle to reduce the cost of secondary development;</li></ul><h2 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture" aria-hidden="true">#</a> Architecture</h2><p><img src="'+i+'" alt="Architecture"></p><p>The kernel is divided into three layers: application layer, agent layer and transport layer. Each layer contains several modules, which are independent of each other, and modules of the same type can be replaced seamlessly.</p><h2 id="application-layer" tabindex="-1"><a class="header-anchor" href="#application-layer" aria-hidden="true">#</a> Application layer</h2><p>The application layer contains some commonly used functions in the proxy layer, which are abstracted out for reuse in different proxy modules. The modules of the application layer should be realized by pure software, and have nothing to do with hardware or platform-related technology.</p><p>List of important modules:</p>',10),y=e("li",null,"Dispatcher: Used to transfer the data received by the inbound agent to the station agent;",-1),f=e("li",null,"DNS: built-in DNS cache;",-1),_=e("li",null,"Proxy Manager: Inbound proxy manager;",-1),b=e("h2",{id:"proxy-layer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#proxy-layer","aria-hidden":"true"},"#"),t(" Proxy layer")],-1),m=e("p",null,"The proxy layer is divided into two parts: Inbound Proxy and Outbound Proxy. The two parts are independent of each other, the inbound agent does not depend on a specific outbound agent, and vice versa.",-1),x=e("h3",{id:"inbound-proxy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inbound-proxy","aria-hidden":"true"},"#"),t(" Inbound proxy")],-1),g={href:"https://github.com/v2fly/v2ray-core/blob/master/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},v=e("h3",{id:"outbound-proxy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#outbound-proxy","aria-hidden":"true"},"#"),t(" Outbound proxy")],-1),k={href:"https://github.com/v2fly/v2ray-core/blob/master/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},w=e("h2",{id:"transport-layer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#transport-layer","aria-hidden":"true"},"#"),t(" Transport layer")],-1),T=e("p",null,"The transport layer provides some tool modules related to network data transmission.",-1);function I(R,N){const n=o("RouterLink"),a=o("ExternalLinkIcon");return d(),l("div",null,[u,e("ul",null,[y,e("li",null,[t("Router: Built-in routing, see "),r(n,{to:"/en_US/config/routing.html"},{default:h(()=>[t("Routing Configuration")]),_:1}),t(";")]),f,_]),b,m,x,e("ul",null,[e("li",null,[t("Implement "),e("a",g,[t("proxy.Inbound"),r(a)]),t(" interface;")])]),v,e("ul",null,[e("li",null,[t("Realize the "),e("a",k,[t("proxy.Outbound"),r(a)]),t(" interface;")])]),w,T])}const S=s(p,[["render",I],["__file","design.html.vue"]]);export{S as default};
