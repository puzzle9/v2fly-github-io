import{_ as o,r as l,o as r,c,a,b as s,d as n,w as t,e as p}from"./app.c6802c3c.js";const i={},d=a("h1",{id:"dokodemo-door",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#dokodemo-door","aria-hidden":"true"},"#"),s(" Dokodemo-door")],-1),u=a("ul",null,[a("li",null,[s("名称："),a("code",null,"dokodemo-door")]),a("li",null,"类型：入站协议")],-1),m=a("p",null,"Dokodemo door（任意门）是一个入站数据协议，它可以监听一个本地端口，并把所有进入此端口的数据发送至指定服务器的一个端口，从而达到端口映射的效果。",-1),b={class:"custom-container tip"},v=a("p",{class:"custom-container-title"},"TIP",-1),k=p(`<h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
    <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>将流量转发到此地址。可以是一个 IP 地址，形如 <code>&quot;1.2.3.4&quot;</code>，或者一个域名，形如 <code>&quot;v2ray.com&quot;</code>。字符串类型。</p><p>当 <code>followRedirect</code>（见下文）为 <code>true</code> 时，<code>address</code> 可为空。</p><blockquote><p><code>port</code>: number</p></blockquote><p>将流量转发到目标地址的指定端口，范围 [1, 65535]，数值类型。必填参数。</p><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot; | &quot;tcp,udp&quot;</p></blockquote><p>可接收的网络协议类型。比如当指定为 <code>&quot;tcp&quot;</code> 时，任意门仅会接收 TCP 流量。默认值为 <code>&quot;tcp&quot;</code>。</p><blockquote><p><code>timeout</code>: number</p></blockquote><p>入站数据的时间限制（秒），默认值为 300。</p><p>V2Ray 3.1 后等价于对应用户等级的 <code>connIdle</code> 策略</p><blockquote><p><code>followRedirect</code>: true | false</p></blockquote>`,13),R=a("code",null,"true",-1),q=a("code",null,"tproxy",-1),h=p(`<blockquote><p><code>userLevel</code>: number</p></blockquote><p>用户等级，所有连接都会使用这个用户等级。</p><h2 id="透明代理配置样例" tabindex="-1"><a class="header-anchor" href="#透明代理配置样例" aria-hidden="true">#</a> 透明代理配置样例</h2><p>V2Ray 中增加一个 dokodemo-door 的入站协议：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp,udp&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置 iptables：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Create new chain</span>
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-N</span> V2RAY
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> V2RAY
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-N</span> V2RAY_MARK

<span class="token comment"># Ignore your V2Ray server&#39;s addresses</span>
<span class="token comment"># It&#39;s very IMPORTANT, just be careful.</span>
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">123.123</span>.123.123 <span class="token parameter variable">-j</span> RETURN

<span class="token comment"># Ignore LANs and any other addresses you&#39;d like to bypass the proxy</span>
<span class="token comment"># See Wikipedia and RFC5735 for full list of reserved networks.</span>
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">0.0</span>.0.0/8 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">10.0</span>.0.0/8 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">127.0</span>.0.0/8 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">169.254</span>.0.0/16 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">172.16</span>.0.0/12 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.0.0/16 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">224.0</span>.0.0/4 <span class="token parameter variable">-j</span> RETURN
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-d</span> <span class="token number">240.0</span>.0.0/4 <span class="token parameter variable">-j</span> RETURN

<span class="token comment"># Anything else should be redirected to Dokodemo-door&#39;s local port</span>
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> REDIRECT --to-ports <span class="token number">12345</span>

<span class="token comment"># Add any UDP rules</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> default dev lo table <span class="token number">100</span>
<span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> lookup <span class="token number">100</span>
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> V2RAY <span class="token parameter variable">-p</span> udp <span class="token parameter variable">--dport</span> <span class="token number">53</span> <span class="token parameter variable">-j</span> TPROXY --on-port <span class="token number">12345</span> --tproxy-mark 0x01/0x01
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> V2RAY_MARK <span class="token parameter variable">-p</span> udp <span class="token parameter variable">--dport</span> <span class="token number">53</span> <span class="token parameter variable">-j</span> MARK --set-mark <span class="token number">1</span>

<span class="token comment"># Apply the rules</span>
iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-j</span> V2RAY
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-j</span> V2RAY
iptables <span class="token parameter variable">-t</span> mangle <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-j</span> V2RAY_MARK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function A(_,f){const e=l("RouterLink");return r(),c("div",null,[d,u,m,a("div",b,[v,a("p",null,[s("若需要出站连接被 V2Ray 重新路由，搭配使用 "),n(e,{to:"/config/protocols/loopback.html"},{default:t(()=>[s("Loopback 协议")]),_:1}),s("，性能更佳。")])]),k,a("p",null,[s("当值为 "),R,s(" 时，dokodemo-door 会识别出由 iptables 转发而来的数据，并转发到相应的目标地址。详见 "),n(e,{to:"/config/transport.html"},{default:t(()=>[s("传输配置")]),_:1}),s(" 中的 "),q,s(" 设置。")]),h])}const V=o(i,[["render",A],["__file","dokodemo.html.vue"]]);export{V as default};
