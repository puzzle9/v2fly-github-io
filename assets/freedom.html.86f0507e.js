import{_ as c,r as d,o as u,c as r,a as o,b as e,d as s,w as n,e as a}from"./app.62347b2e.js";const l={},i=a(`<h1 id="freedom" tabindex="-1"><a class="header-anchor" href="#freedom" aria-hidden="true">#</a> Freedom</h1><ul><li>名称：<code>freedom</code></li><li>类型：出站协议</li></ul><p>Freedom 是一个出站协议，可以用来向任意网络发送（正常的） TCP 或 UDP 数据。</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;redirect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:3366&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>domainStrategy</code>: &quot;AsIs&quot; | &quot;UseIP&quot; | &quot;UseIPv4&quot; | &quot;UseIPv6&quot;</p></blockquote>`,6),p=o("code",null,'"AsIs"',-1),_=o("code",null,'"UseIP"',-1),m=o("code",null,'"UseIPv4"',-1),q=o("code",null,'"UseIPv6"',-1),h=o("code",null,'"AsIs"',-1),v=o("code",null,'"UseIP"',-1),b=o("code",null,"sendThrough",-1),k=o("code",null,"sendThrough",-1),f=a("<p>(V2Ray 4.7+) 当使用 <code>&quot;UseIPv4&quot;</code> 或 <code>&quot;UseIPv6&quot;</code> 模式时，Freedom 会只使用对应的 IPv4 或 IPv6 地址。当 <code>sendThrough</code> 指定了不匹配的本地地址时，将导致连接失败。</p><blockquote><p><code>redirect</code>: address_port</p></blockquote><p>Freedom 会强制将所有数据发送到指定地址（而不是入站协议指定的地址）。其值为一个字符串，样例：<code>&quot;127.0.0.1:80&quot;</code>，<code>&quot;:1234&quot;</code>。当地址不指定时，如 <code>&quot;:443&quot;</code>，Freedom 不会修改原先的目标地址。当端口为 <code>0</code> 时，如 <code>&quot;v2ray.com: 0&quot;</code>，Freedom 不会修改原先的端口。</p><blockquote><p><code>userLevel</code>: number</p></blockquote><p>用户等级，所有连接都使用这一等级。</p>",5);function I(P,g){const t=d("RouterLink");return u(),r("div",null,[i,o("p",null,[e("在目标地址为域名时，Freedom 可以直接向此域名发出连接（"),p,e("），或者将域名解析为 IP 之后再建立连接（"),_,e("、"),m,e(" 和 "),q,e("）。解析 IP 的步骤会使用 V2Ray "),s(t,{to:"/config/dns.html"},{default:n(()=>[e("内建的 DNS")]),_:1}),e("。默认值为 "),h,e("。")]),o("p",null,[e("(V2Ray 4.6+) 当使用 "),v,e(" 模式，并且 "),s(t,{to:"/config/overview.html#outboundobject"},{default:n(()=>[e("出站连接配置")]),_:1}),e(" 中指定了 "),b,e(" 时，Freedom 会根据 "),k,e(" 的值自动判断所需的 IP 类型，IPv4 或 IPv6。")]),f])}const y=c(l,[["render",I],["__file","freedom.html.vue"]]);export{y as default};
