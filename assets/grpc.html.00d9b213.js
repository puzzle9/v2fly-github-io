import{_ as t,r as s,o,c,a as e,b as n,d as r,e as i}from"./app.eec941e7.js";const d={},p=i(`<h1 id="grpc" tabindex="-1"><a class="header-anchor" href="#grpc" aria-hidden="true">#</a> gRPC</h1><p>gRPC 使用 HTTP/2 协议传输，内置连接复用（mux）功能。(v4.36.0+)</p><h2 id="grpcobject" tabindex="-1"><a class="header-anchor" href="#grpcobject" aria-hidden="true">#</a> grpcObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;serviceName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;GunService&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>serviceName</code>: string</p></blockquote><p>gRPC 服务的名称。其作用类似 <code>path</code> 的功能，用于防止探测是否部署了本传输协议。建议使用复杂的随机字符串。</p>`,6),l={href:"https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#appendix-a---grpc-for-protobuf",target:"_blank",rel:"noopener noreferrer"},u=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"TIP"),e("p",null,[n("如需使用 Nginx、Caddy 等软件进行分流，设置的分流路径应为 "),e("code",null,"/${serviceName}/Tun"),n("。")])],-1),h=e("h2",{id:"credits",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#credits","aria-hidden":"true"},"#"),n(" Credits")],-1),g={href:"https://github.com/Qv2ray/gun",target:"_blank",rel:"noopener noreferrer"};function _(m,b){const a=s("ExternalLinkIcon");return o(),c("div",null,[p,e("p",null,[n("根据 "),e("a",l,[n("gRPC 规范官方"),r(a)]),n(" 规定，此字段不建议使用除英文大小写字母、数字、下划线及英文句号之外的字符组成。")]),u,h,e("p",null,[e("a",g,[n("Qv2ray/gun"),r(a)])])])}const f=t(d,[["render",_],["__file","grpc.html.vue"]]);export{f as default};
