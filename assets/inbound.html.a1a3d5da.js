import{_ as p,r as c,o as u,c as i,a as o,b as n,d as t,w as s,e as a}from"./app.defb07fa.js";const d={},r=a(`<h1 id="inbounds" tabindex="-1"><a class="header-anchor" href="#inbounds" aria-hidden="true">#</a> Inbounds</h1><p>inbound</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span><span class="token string">&quot;vmess&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sniffing&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>protocol</code>: name of <code>[inbound]</code></p></blockquote><p>入站协议名称。</p><blockquote><p><code>settings</code>: settings of <code>[inbound]</code></p></blockquote><p>入站协议设置。</p><blockquote><p><code>port</code>: string</p></blockquote><p>接受的格式如下:</p><ul><li>整型数值：实际的端口号。</li><li>字符串：可以是一个数值类型的字符串，如 <code>&quot;1234&quot;</code>；或者一个数值范围，如 <code>&quot;5-10&quot;</code> 表示端口 5 到端口 10，这 6 个端口。</li></ul><blockquote><p><code>listen</code>: string</p></blockquote><p>监听地址，只允许 IP 地址，默认值为 <code>&quot;0.0.0.0&quot;</code>，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。</p>`,12),k=o("code",null,'"/dev/shm/domain.socket"',-1),q=o("code",null,'"@"',-1),b={href:"https://www.man7.org/linux/man-pages/man7/unix.7.html",target:"_blank",rel:"noopener noreferrer"},f=o("code",null,'"@@"',-1),h=a('<p>填写 Unix domain socket 时，<code>port</code> 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。</p><blockquote><p><code>tag</code>: string</p></blockquote><p>此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有 <code>tag</code> 中唯一。</p><blockquote><p><code>sniffing</code>: <a href="#SniffingObject">SniffingObject</a></p></blockquote><p>入站连接的流量探测设置。流量探测允许路由根据连接的内容和元数据转发连接。</p>',5),m=o("code",null,"streamSettings",-1),_=o("p",null,"底层传输配置。",-1),v=o("h2",{id:"支持的代理协议",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#支持的代理协议","aria-hidden":"true"},"#"),n(" 支持的代理协议")],-1),g=a('<h2 id="sniffingobject" tabindex="-1"><a class="header-anchor" href="#sniffingobject" aria-hidden="true">#</a> SniffingObject</h2><blockquote><p><code>enabled</code>: true | false</p></blockquote><p>是否开启流量探测。</p><blockquote><p><code>destOverride</code>: [&quot;http&quot; | &quot;tls&quot; | &quot;quic&quot; | &quot;fakedns&quot; | &quot;fakedns+others&quot;]</p></blockquote><p>当流量为指定类型时，按其中包括的目标地址重置当前连接的目标。</p><p><code>fakedns+others</code> 选项会优先进行 FakeDNS 虚拟 DNS 服务器匹配。如果 IP 地址处于虚拟 DNS 服务器的 IP 地址区间内，但是没有找到相应的域名记录时，使用 <code>http</code>、<code>tls</code> 的匹配结果。此选项仅在 <code>metadataOnly</code> 为 <code>false</code> 时有效。</p><blockquote><p><code>metadataOnly</code>: true | false</p></blockquote><p>是否仅使用元数据推断目标地址而不截取流量内容。只有元数据流量目标侦测模块会被激活。</p><p>如果关闭仅使用元数据推断目标地址，客户端必须先发送数据，代理服务器才会实际建立连接。此行为与需要服务器首先发起第一个消息的协议如 SMTP 协议不兼容。</p>',9);function x(S,y){const l=c("ExternalLinkIcon"),e=c("RouterLink");return u(),i("div",null,[r,o("p",null,[n("v4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 "),k,n("，可在开头加 "),q,n(" 代表 "),o("a",b,[n("abstract"),t(l)]),n("，"),f,n(" 则代表带 padding 的 abstract。")]),h,o("blockquote",null,[o("p",null,[m,n(": "),t(e,{to:"/v5/config/stream.html"},{default:s(()=>[n("StreamObject")]),_:1})])]),_,v,o("ul",null,[o("li",null,[t(e,{to:"/v5/config/proxy/socks.html"},{default:s(()=>[n("SOCKS")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/vmess.html"},{default:s(()=>[n("VMess")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/vlite.html"},{default:s(()=>[n("VLite")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/shadowsocks.html"},{default:s(()=>[n("Shadowsocks")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/http.html"},{default:s(()=>[n("HTTP")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/dokodemo.html"},{default:s(()=>[n("Dokodemo")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/trojan.html"},{default:s(()=>[n("Trojan")]),_:1})]),o("li",null,[t(e,{to:"/v5/config/proxy/vless.html"},{default:s(()=>[n("VLESS")]),_:1})])]),g])}const T=p(d,[["render",x],["__file","inbound.html.vue"]]);export{T as default};
