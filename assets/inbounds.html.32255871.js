import{_ as l,r as c,o as u,c as d,a as s,b as n,d as o,w as t,e}from"./app.dda88656.js";const i={},r=e(`<h1 id="inbounds" tabindex="-1"><a class="header-anchor" href="#inbounds" aria-hidden="true">#</a> Inbounds</h1><p>入站连接用于接收从客户端（浏览器或上一级代理服务器）发来的数据，可用的协议请见协议列表。</p><h2 id="inboundobject" tabindex="-1"><a class="header-anchor" href="#inboundobject" aria-hidden="true">#</a> InboundObject</h2><p><code>InboundObject</code> 对应配置文件中 <code>inbounds</code> 项的一个子元素。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span>
    <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;协议名称&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;标识&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sniffing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;destOverride&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;tls&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;metadataOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;allocate&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;strategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;refresh&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>listen</code>: address</p></blockquote><p>监听地址，只允许 IP 地址，默认值为 <code>&quot;0.0.0.0&quot;</code>，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。</p>`,7),k=s("code",null,'"/dev/shm/domain.socket"',-1),b=s("code",null,'"@"',-1),q={href:"https://www.man7.org/linux/man-pages/man7/unix.7.html",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,'"@@"',-1),m=e("<p>填写 Unix domain socket 时，<code>port</code> 和 <code>allocate</code> 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。</p><blockquote><p><code>port</code>: number | &quot;env:variable&quot; | string</p></blockquote><p>端口。接受的格式如下:</p><ul><li>整型数值：实际的端口号。</li><li>环境变量：以 <code>&quot;env:&quot;</code> 开头，后面是一个环境变量的名称，如 <code>&quot;env:PORT&quot;</code>。V2Ray 会以字符串形式解析这个环境变量。</li><li>字符串：可以是一个数值类型的字符串，如 <code>&quot;1234&quot;</code>；或者一个数值范围，如 <code>&quot;5-10&quot;</code> 表示端口 5 到端口 10，这 6 个端口。</li></ul><p>当只有一个端口时，V2Ray 会在此端口监听入站连接。当指定了一个端口范围时，取决于 <code>allocate</code> 设置。</p><blockquote><p><code>protocol</code>: string</p></blockquote><p>连接协议名称，可选的值见协议列表。</p><blockquote><p><code>settings</code>: InboundConfigurationObject</p></blockquote><p>具体的配置内容，视协议不同而不同。详见每个协议中的 <code>InboundConfigurationObject</code>。</p>",9),h=s("code",null,"streamSettings",-1),g=e(`<blockquote><p><code>tag</code>: string</p></blockquote><p>此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有 <code>tag</code> 中唯一。</p><blockquote><p><code>sniffing</code>: <a href="#sniffingobject">SniffingObject</a></p></blockquote><p>尝试探测流量的类型</p><blockquote><p><code>allocate</code>: <a href="#allocateobject">AllocateObject</a></p></blockquote><p>端口分配设置</p><h2 id="sniffingobject" tabindex="-1"><a class="header-anchor" href="#sniffingobject" aria-hidden="true">#</a> SniffingObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;destOverride&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;tls&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;metadataOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>enabled</code>: true | false</p></blockquote><p>是否开启流量探测。</p><blockquote><p><code>destOverride</code>: [&quot;http&quot; | &quot;tls&quot; | &quot;quic&quot; | &quot;fakedns&quot; | &quot;fakedns+others&quot;]</p></blockquote><p>当流量为指定类型时，按其中包括的目标地址重置当前连接的目标。</p><p><code>fakedns+others</code> 选项会优先进行 FakeDNS 虚拟 DNS 服务器匹配。如果 IP 地址处于虚拟 DNS 服务器的 IP 地址区间内，但是没有找到相应的域名记录时，使用 <code>http</code>、<code>tls</code> 和 <code>quic</code> 的匹配结果。此选项仅在 <code>metadataOnly</code> 为 <code>false</code> 时有效。(v4.38.0+)</p><blockquote><p><code>metadataOnly</code>: true | false</p></blockquote><p>是否仅使用元数据推断目标地址而不截取流量内容。只有元数据流量目标侦测模块会被激活。</p><p>如果关闭仅使用元数据推断目标地址，客户端必须先发送数据，代理服务器才会实际建立连接。此行为与需要服务器首先发起第一个消息的协议如 SMTP 协议不兼容。</p>`,16),f={class:"custom-container tip"},_=s("p",{class:"custom-container-title"},"TIP",-1),y=e(`<h2 id="allocateobject" tabindex="-1"><a class="header-anchor" href="#allocateobject" aria-hidden="true">#</a> AllocateObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;strategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;refresh&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>strategy</code>: &quot;always&quot; | &quot;random&quot;</p></blockquote><p>端口分配策略。<code>&quot;always&quot;</code> 表示总是分配所有已指定的端口，<code>port</code> 中指定了多少个端口，V2Ray 就会监听这些端口。<code>&quot;random&quot;</code> 表示随机开放端口，每隔 <code>refresh</code> 分钟在 <code>port</code> 范围中随机选取 <code>concurrency</code> 个端口来监听。</p><blockquote><p><code>refresh</code>: number</p></blockquote><p>随机端口刷新间隔，单位为分钟。最小值为 <code>2</code>，建议值为 <code>5</code>。这个属性仅当 <code>strategy = random</code> 时有效。</p><blockquote><p><code>concurrency</code>: number</p></blockquote><p>随机端口数量。最小值为 <code>1</code>，最大值为 <code>port</code> 范围的三分之一。建议值为 <code>3</code>。</p>`,8);function j(x,O){const p=c("ExternalLinkIcon"),a=c("RouterLink");return u(),d("div",null,[r,s("p",null,[n("v4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 "),k,n("，可在开头加 "),b,n(" 代表 "),s("a",q,[n("abstract"),o(p)]),n("，"),v,n(" 则代表带 padding 的 abstract。")]),m,s("blockquote",null,[s("p",null,[h,n(": "),o(a,{to:"/config/transport.html#streamsettingsobject"},{default:t(()=>[n("StreamSettingsObject")]),_:1}),n("。")])]),s("p",null,[o(a,{to:"/config/transport.html#streamsettingsobject"},{default:t(()=>[n("底层传输配置")]),_:1})]),g,s("div",f,[_,s("p",null,[o(a,{to:"/config/fakedns.html"},{default:t(()=>[n("虚拟 DNS 服务器")]),_:1}),n(" 是一个元数据流量目标地址侦测模块。其他流量探测模块需要关闭 metadataOnly 才能被激活。")])]),y])}const I=l(i,[["render",j],["__file","inbounds.html.vue"]]);export{I as default};
