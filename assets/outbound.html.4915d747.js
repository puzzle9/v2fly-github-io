import{_ as p,r as c,o as l,c as u,a as o,b as n,d as e,w as a,e as t}from"./app.0e49ca11.js";const r={},d=t(`<h1 id="outbounds" tabindex="-1"><a class="header-anchor" href="#outbounds" aria-hidden="true">#</a> Outbounds</h1><p>outbound</p><p>出站连接用于向远程网站或下一级代理服务器发送数据，可用的协议请见协议列表。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vmess&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sendThrough&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.2.3.4&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;proxySettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;mux&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">8</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>protocol</code>: name of <code>&lt;outbound&gt;</code></p></blockquote><p>出站协议名称。</p><blockquote><p><code>settings</code>: settings of <code>&lt;outbound&gt;</code></p></blockquote><p>出站协议设置。</p><blockquote><p><code>sendThrough</code>: string</p></blockquote><p>用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为 <code>&quot;0.0.0.0&quot;</code>。</p><blockquote><p><code>tag</code>: string</p></blockquote><p>此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一。</p>`,12),i=o("code",null,"streamSettings",-1),k=t('<p>底层传输配置。</p><blockquote><p><code>proxySettings</code>: <a href="#ProxyObject">ProxyObject</a></p></blockquote><p>出站代理配置。当出站代理生效时。</p><blockquote><p><code>mux</code>: <a href="#MuxObject">MuxObject</a></p></blockquote><p>Mux 配置。</p><h2 id="支持的代理协议" tabindex="-1"><a class="header-anchor" href="#支持的代理协议" aria-hidden="true">#</a> 支持的代理协议</h2>',6),b=t(`<h2 id="proxyobject" tabindex="-1"><a class="header-anchor" href="#proxyobject" aria-hidden="true">#</a> ProxyObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another-outbound-tag&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;transportLayer&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>tag</code>: string</p></blockquote><p>当指定另一个出站连接的标识时，此出站连接发出的数据，将被转发至所指定的出站连接发出。</p><blockquote><p><code>transportLayer</code>: true | false</p></blockquote><p>是否启用传输层转发支持。在启用后,此出站连接的传输层协议将保持生效（如果传输层协议支持）。</p><p>如果不启用此选项, 在转发时传输层协议将失效，只能使用默认的 TCP 传输协议。</p><h2 id="muxobject" tabindex="-1"><a class="header-anchor" href="#muxobject" aria-hidden="true">#</a> MuxObject</h2>`,8),v=t(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">8</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>enabled</code>: true | false</p></blockquote><p>是否启用 Mux，默认值为 <code>false</code>。</p><blockquote><p><code>concurrency</code>: number</p></blockquote><p>最大并发连接数。最小值 <code>1</code>，最大值 <code>1024</code>，默认值 <code>8</code>。</p><p>如果填负数，如 <code>-1</code>，则不加载 Mux 模块。</p><p>此数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而 <code>concurrency=8</code> 时，V2Ray 只会发出一条实际的连接，客户端的 8 个请求全部由这条连接传输。</p>`,7);function m(h,q){const s=c("RouterLink");return l(),u("div",null,[d,o("blockquote",null,[o("p",null,[i,n(": "),e(s,{to:"/v5/config/stream.html"},{default:a(()=>[n("StreamObject")]),_:1})])]),k,o("ul",null,[o("li",null,[e(s,{to:"/v5/config/proxy/socks.html"},{default:a(()=>[n("SOCKS")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/vmess.html"},{default:a(()=>[n("VMess")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/vlite.html"},{default:a(()=>[n("VLite")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/shadowsocks.html"},{default:a(()=>[n("Shadowsocks")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/freedom.html"},{default:a(()=>[n("Freedom")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/loopback.html"},{default:a(()=>[n("Loopback")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/blackhole.html"},{default:a(()=>[n("Blackhole")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/dns.html"},{default:a(()=>[n("DNS")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/trojan.html"},{default:a(()=>[n("Trojan")]),_:1})]),o("li",null,[e(s,{to:"/v5/config/proxy/vless.html"},{default:a(()=>[n("VLESS")]),_:1})])]),b,o("p",null,[n("Mux 功能实现了在一条 TCP 连接上分发多条 TCP 连接的数据。协议细节详见 "),e(s,{to:"/developer/protocols/muxcool.html"},{default:a(()=>[n("Mux.Cool")]),_:1}),n("。")]),v])}const f=p(r,[["render",m],["__file","outbound.html.vue"]]);export{f as default};
