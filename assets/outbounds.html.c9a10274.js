import{_ as p,r as c,o as u,c as l,a as s,b as n,d as e,w as a,e as t}from"./app.48ab8264.js";const r={},d=t(`<h1 id="outbounds" tabindex="-1"><a class="header-anchor" href="#outbounds" aria-hidden="true">#</a> Outbounds</h1><p>出站连接用于向远程网站或下一级代理服务器发送数据，可用的协议请见协议列表。</p><h2 id="outboundobject" tabindex="-1"><a class="header-anchor" href="#outboundobject" aria-hidden="true">#</a> OutboundObject</h2><p><code>OutboundObject</code> 对应配置文件中 <code>outbounds</code> 项的一个子元素。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;sendThrough&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;协议名称&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;标识&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;proxySettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another-outbound-tag&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;transportLayer&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;mux&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>sendThrough</code>: address</p></blockquote><p>用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为 <code>&quot;0.0.0.0&quot;</code>。</p><blockquote><p><code>protocol</code>: string</p></blockquote><p>连接协议名称，可选的值见协议列表。</p><blockquote><p><code>settings</code>: OutboundConfigurationObject</p></blockquote><p>具体的配置内容，视协议不同而不同。详见每个协议中的 <code>OutboundConfigurationObject</code>。</p><blockquote><p><code>tag</code>: string</p></blockquote><p>此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一。</p>`,13),i=s("code",null,"streamSettings",-1),b=t(`<blockquote><p><code>proxySettings</code>: <a href="#proxysettingsobject">ProxySettingsObject</a></p></blockquote><p>出站代理配置。当出站代理生效时，此出站协议的 <code>streamSettings</code> 将不起作用。</p><blockquote><p><code>mux</code>: <a href="#muxobject">MuxObject</a></p></blockquote><p><a href="#muxobject">Mux 配置</a>。</p><h2 id="proxysettingsobject" tabindex="-1"><a class="header-anchor" href="#proxysettingsobject" aria-hidden="true">#</a> ProxySettingsObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another-outbound-tag&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;transportLayer&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>tag</code>: string</p></blockquote><p>当指定另一个出站连接的标识时，此出站连接发出的数据，将被转发至所指定的出站连接发出。</p><blockquote><p><code>transportLayer</code>: true | false</p></blockquote><p>是否启用传输层转发支持。在启用后,此出站连接的传输层协议将保持生效（如果传输层协议支持）。(v4.35.0+)</p><p>如果不启用此选项, 在转发时传输层协议将失效，只能使用默认的 TCP 传输协议。</p><h2 id="muxobject" tabindex="-1"><a class="header-anchor" href="#muxobject" aria-hidden="true">#</a> MuxObject</h2>`,12),k=t(`<p><code>MuxObject</code> 对应 <code>OutboundObject</code> 中的 <code>mux</code> 项。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;concurrency&quot;</span><span class="token operator">:</span> <span class="token number">8</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>enabled</code>: true | false</p></blockquote><p>是否启用 Mux 转发请求，默认值 <code>false</code>。</p><blockquote><p><code>concurrency</code>: number</p></blockquote><p>最大并发连接数。最小值 <code>1</code>，最大值 <code>1024</code>，默认值 <code>8</code>。</p><p>填负数，如 <code>-1</code>，不加载 mux 模块（v4.22.0+）。</p><p>这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而 <code>concurrency=8</code> 时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输。</p>`,8);function q(v,m){const o=c("RouterLink");return u(),l("div",null,[d,s("blockquote",null,[s("p",null,[i,n(": "),e(o,{to:"/config/transport.html#streamsettingsobject"},{default:a(()=>[n("StreamSettingsObject")]),_:1})])]),s("p",null,[e(o,{to:"/config/transport.html#streamsettingsobject"},{default:a(()=>[n("底层传输配置")]),_:1})]),b,s("p",null,[n("Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据。实现细节详见 "),e(o,{to:"/developer/protocols/muxcool.html"},{default:a(()=>[n("Mux.Cool")]),_:1}),n("。Mux 是为了减少 TCP 的握手延迟而设计，而非提高连接的吞吐量。使用 Mux 看视频、下载或者测速通常都有反效果。Mux 只需要在客户端启用，服务器端自动适配。")]),k])}const h=p(r,[["render",q],["__file","outbounds.html.vue"]]);export{h as default};
