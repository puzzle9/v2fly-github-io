import{_ as t,r as s,o as n,c as a,a as e,b as o,d,e as r}from"./app.60df9e8e.js";const p={},i=e("h1",{id:"socks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#socks","aria-hidden":"true"},"#"),o(" Socks")],-1),l=e("p",null,"标准 Socks 协议实现。",-1),u={class:"custom-container warning"},k=e("p",{class:"custom-container-title"},"WARNING",-1),h=e("p",null,"如果你将 Socks5 代理在不安全的网络环境中分享给其他人使用，建议搭配防火墙使用。",-1),_={href:"https://github.com/v2fly/v2fly-github-io/issues/104",target:"_blank",rel:"noopener noreferrer"},b=r('<h2 id="socks-入站" tabindex="-1"><a class="header-anchor" href="#socks-入站" aria-hidden="true">#</a> Socks 入站</h2><p>inbound.socks</p><blockquote><p><code>address</code> : string</p></blockquote><p>SOCKS5 通过 UDP ASSOCIATE 命令建立 UDP 会话。服务端在对客户端发来的该命令的回复中，指定客户端发包的目标地址。默认值为空。</p><p>若此项为空，对于通过本地回环 IPv4/IPv6 连接的客户端，回复对应的回环 IPv4/IPv6 地址；对于非本机的客户端，回复当前入站的监听地址。</p><p>你可以通过配置此项使 V2Ray 固定回复你配置的地址。如果你不知道此项的作用，留空即可。</p><blockquote><p><code>udpEnabled</code>: true | false</p></blockquote><p>是否开启 UDP 协议的支持。默认值为 <code>false</code>。</p><blockquote><p><code>packetEncoding</code>: [&quot;None&quot; | &quot;Packet&quot;]</p></blockquote><p>UDP 包编码方式，默认值为 <code>None</code>。 当该值为 <code>None</code> 时，UDP 将根据目标地址被映射 (Address and Port-Dependent Mapping)。 当该值为 <code>Packet</code> 时，UDP 将被端点独立映射 (Endpoint Independent Mapping)，此 UDP 行为也被称为 FullCone 或 NAT1。</p><h2 id="socks-出站" tabindex="-1"><a class="header-anchor" href="#socks-出站" aria-hidden="true">#</a> Socks 出站</h2><p>outbound.socks</p><blockquote><p><code>address</code>: string</p></blockquote><p>服务器地址。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>仅支持连接到 Socks 5 服务器。</p></div><blockquote><p><code>port</code>: number</p></blockquote><p>服务器端口。</p>',17);function f(P,m){const c=s("ExternalLinkIcon");return n(),a("div",null,[i,l,e("div",u,[k,h,e("p",null,[o("Rfc: "),e("a",_,[o("SOCKS 5 的认证在使用 UDP 时可被绕过"),d(c)])])]),b])}const S=t(p,[["render",f],["__file","socks.html.vue"]]);export{S as default};
