import{_ as o,r as t,o as p,c,a as s,b as n,d as e,e as u}from"./app.5e6e2391.js";const r={},l=s("h1",{id:"socks",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#socks","aria-hidden":"true"},"#"),n(" Socks")],-1),i=s("ul",null,[s("li",null,[n("名称："),s("code",null,"socks")]),s("li",null,"类型：入站 / 出站")],-1),d={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},k={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},b=s("p",null,[n("Socks 的配置分为两部分，"),s("code",null,"InboundConfigurationObject"),n(" 和 "),s("code",null,"OutboundConfigurationObject"),n("，分别对应入站和出站协议配置中的 "),s("code",null,"settings"),n(" 项。")],-1),v={class:"custom-container warning"},q=s("p",{class:"custom-container-title"},"WARNING",-1),m=s("p",null,"如果你将 Socks5 代理在不安全的网络环境中分享给其他人使用，建议搭配防火墙使用。",-1),h={href:"https://github.com/v2fly/v2fly-github-io/issues/104",target:"_blank",rel:"noopener noreferrer"},g=u(`<h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;servers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>
            <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test user&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test pass&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意：虽然 Socks Outbound 可以作为对外访问的配置，但 Socks 协议没有对传输加密，不适宜经公网中传输。</p><p>Socks Outbound 更有意义的用法是在特殊情况下，只能使用 Socks Proxy 对外访问内部网络中，作为为其他协议连接代理服务器的前置代理使用（见 <code>OutboundObject</code> 的 <code>ProxySettingsObject</code>）。</p><blockquote><p><code>servers</code>: [ <a href="#serverobject">ServerObject</a> ]</p></blockquote><p>Socks 服务器列表，其中每一项是一个服务器配置。</p><blockquote><p><code>version</code>: &quot;5&quot; | &quot;4a&quot; | &quot;4&quot;</p></blockquote><p>Socks 协议版本。 (v4.42.2+)</p><h3 id="serverobject" tabindex="-1"><a class="header-anchor" href="#serverobject" aria-hidden="true">#</a> ServerObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>
    <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test user&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test pass&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>服务器地址。</p><blockquote><p><code>port</code>: number</p></blockquote><p>服务器端口</p><blockquote><p><code>users</code>: [ <a href="#userobject">UserObject</a> ]</p></blockquote><p>用户列表，其中每一项一个用户配置。当列表不为空时，Socks 客户端会使用此用户信息进行认证；如未指定，则不进行认证。</p><h3 id="userobject" tabindex="-1"><a class="header-anchor" href="#userobject" aria-hidden="true">#</a> UserObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test user&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test pass&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>user</code>: string</p></blockquote><p>用户名</p><blockquote><p><code>pass</code>: string</p></blockquote><p>密码</p><blockquote><p><code>level</code>: number</p></blockquote><p>用户等级</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><p>应该注意，虽然 socks inbound 可以公共服务端口，但 socks 协议没有对传输加密，不适宜经公网中传输。socks inbound 更有意义的用法是在局域网或本机环境下，为其他程序提供本地服务。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;auth&quot;</span><span class="token operator">:</span> <span class="token string">&quot;noauth&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;accounts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;udp&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>auth</code>: &quot;noauth&quot; | &quot;password&quot;</p></blockquote><p>Socks 协议的认证方式，支持 <code>&quot;noauth&quot;</code> 匿名方式和 <code>&quot;password&quot;</code> 用户密码方式。默认值为 <code>&quot;noauth&quot;</code>。</p><blockquote><p><code>accounts</code>: [ <a href="#accountobject">AccountObject</a> ]</p></blockquote><p>一个数组，数组中每个元素为一个用户帐号。默认值为空。此选项仅当 <code>auth</code> 为 <code>password</code> 时有效。</p><blockquote><p><code>udp</code>: true | false</p></blockquote><p>是否开启 UDP 协议的支持。默认值为 <code>false</code>。</p><blockquote><p><code>ip</code>: address</p></blockquote><p>SOCKS5 通过 <code>UDP ASSOCIATE</code> 命令建立 UDP 会话。服务端在对客户端发来的该命令的回复中，指定客户端发包的目标地址。</p><ul><li>v4.34.0+: 默认值为空，此时对于通过本地回环 IPv4/IPv6 连接的客户端，回复对应的回环 IPv4/IPv6 地址；对于非本机的客户端，回复当前入站的监听地址。</li><li>v4.33.0 及更早版本: 默认值 <code>127.0.0.1</code>。</li></ul><p>你可以通过配置此项使 V2Ray 固定回复你配置的地址。如果你不知道此项的作用，留空即可。</p><blockquote><p><code>userLevel</code>: number</p></blockquote><p>用户等级，所有连接使用这一等级。</p><h3 id="accountobject" tabindex="-1"><a class="header-anchor" href="#accountobject" aria-hidden="true">#</a> AccountObject</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>user</code>: string</p></blockquote><p>用户名</p><blockquote><p><code>pass</code>: string</p></blockquote><p>密码</p>`,45);function j(f,_){const a=t("ExternalLinkIcon");return p(),c("div",null,[l,i,s("p",null,[n("标准 Socks 协议实现，兼容 "),s("a",d,[n("Socks 4"),e(a)]),n("、Socks 4a 和 "),s("a",k,[n("Socks 5"),e(a)]),n("。")]),b,s("div",v,[q,m,s("p",null,[n("Rfc: "),s("a",h,[n("SOCKS 5 的认证在使用 UDP 时可被绕过"),e(a)])])]),g])}const S=o(r,[["render",j],["__file","socks.html.vue"]]);export{S as default};
