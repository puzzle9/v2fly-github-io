import{_ as n,r as i,o as r,c as p,a as e,b as o,w as c,e as a,d as s}from"./app.5a12ac33.js";const u={},l=a(`<h1 id="stream" tabindex="-1"><a class="header-anchor" href="#stream" aria-hidden="true">#</a> Stream</h1><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;transport&quot;</span><span class="token operator">:</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;transportSettings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;security&quot;</span><span class="token operator">:</span><span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;securitySettings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>transport</code>: name of <code>&lt;transport&gt;</code></p></blockquote><blockquote><p><code>transportSettings</code>: settings of <code>&lt;transport&gt;</code></p></blockquote><blockquote><p><code>security</code>: name of <code>&lt;security&gt;</code></p></blockquote><blockquote><p><code>securitySettings</code>: settings of <code>&lt;security&gt;</code></p></blockquote><blockquote><p><code>socketSettings</code>: <a href="#SocketConfigObject">SocketConfigObject</a></p></blockquote><h3 id="supported-streams" tabindex="-1"><a class="header-anchor" href="#supported-streams" aria-hidden="true">#</a> Supported Streams</h3>`,8),d=s("WebSocket"),h=s("mKCP"),f=s("tcp"),k=a('<h2 id="tls" tabindex="-1"><a class="header-anchor" href="#tls" aria-hidden="true">#</a> TLS</h2><p>security.tls</p><blockquote><p><code>serverName</code>: string</p></blockquote><p>The server name indication domain name for TLS connection.</p><blockquote><p><code>nextProtocol</code> : [string]</p></blockquote><p>The ALPN for TLS connections.</p><blockquote><p><code>disableSystemRoot</code>: true | false</p></blockquote><p>Whether system level Certificate Authority Store should be trusted.</p><blockquote><p><code>pinnedPeerCertificateChainSha256</code> : [string]</p></blockquote><p>Pinned Peer Certificate Chain SHA256 Hash. Should be represented in base64 format.</p><blockquote><p><code>certificate</code>: [<a href="#CertificateObject">CertificateObject</a>]</p></blockquote><h1 id="certificateobject" tabindex="-1"><a class="header-anchor" href="#certificateobject" aria-hidden="true">#</a> CertificateObject</h1><blockquote><p><code>usage</code> : string</p></blockquote><p>The purpose of the certificate.</p><ul><li><code>&quot;ENCIPHERMENT&quot;</code>: The certificate is used for TLS authentication and encryption.</li><li><code>&quot;AUTHORITY_VERIFY&quot;</code>: The certificate is used to verify the remote TLS certificate. When using this option, the current certificate must be a CA certificate.</li><li><code>&quot;AUTHORITY_VERIFY_CLIENT&quot;</code>: : The certificate is used to verify the remote TLS client certificate. When using this option, the current certificate must be a CA certificate.</li><li><code>&quot;AUTHORITY_ISSUE&quot;</code>: The certificate is used to issue other certificates. When using this option, the current certificate must be a CA certificate.</li></ul><blockquote><p><code>Certificate</code>: string</p></blockquote><p>The Certificate file in PEM format.</p><blockquote><p><code>Key</code>: string</p></blockquote><p>The Certificate private key file in PEM format.</p><blockquote><p><code>certificateFile</code>: string</p></blockquote><p>The path for the Certificate file.</p><blockquote><p><code>keyFile</code>: string</p></blockquote><p>The path for the Certificate private key file.</p>',23);function b(q,m){const t=i("RouterLink");return r(),p("div",null,[l,e("ul",null,[e("li",null,[o(t,{to:"/en_US/v5/config/stream/websocket.html"},{default:c(()=>[d]),_:1})]),e("li",null,[o(t,{to:"/en_US/v5/config/stream/kcp.html"},{default:c(()=>[h]),_:1})]),e("li",null,[o(t,{to:"/en_US/v5/config/stream/tcp.html"},{default:c(()=>[f]),_:1})])]),k])}const _=n(u,[["render",b],["__file","stream.html.vue"]]);export{_ as default};
