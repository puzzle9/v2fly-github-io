import{_ as c,r as p,o as i,c as u,a as n,b as s,d as e,w as a,e as t}from"./app.f77be7dd.js";const r={},d=n("h1",{id:"vless",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vless","aria-hidden":"true"},"#"),s(" VLESS")],-1),b=n("ul",null,[n("li",null,[s("名称："),n("code",null,"vless")]),n("li",null,"类型：入站 / 出站")],-1),k=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"WARNING"),n("p",null,"目前 VLESS 没有自带加密，请用于可靠信道，如 TLS。目前 VLESS 不支持分享。")],-1),v=n("p",null,"VLESS 是一个无状态的轻量传输协议，它分为入站和出站两部分，可以作为 V2Ray 客户端和服务器之间的桥梁。",-1),m=t(`<p>VLESS 的配置分为两部分，<code>InboundConfigurationObject</code> 和 <code>OutboundConfigurationObject</code>，分别对应入站和出站协议配置中的 <code>settings</code> 项。</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;vnext&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;example.com&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">443</span><span class="token punctuation">,</span>
            <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;encryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>vnext</code>: [ <a href="#serverobject">ServerObject</a> ]</p></blockquote><p>一个数组，包含一系列指向服务端的配置。</p><h3 id="serverobject" tabindex="-1"><a class="header-anchor" href="#serverobject" aria-hidden="true">#</a> ServerObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;example.com&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">443</span><span class="token punctuation">,</span>
    <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>地址，指向服务端，支持域名、IPv4、IPv6。</p><blockquote><p><code>port</code>: number</p></blockquote><p>端口，通常与服务端监听的端口相同。</p><blockquote><p><code>users</code>: [ <a href="#userobject">UserObject</a> ]</p></blockquote><p>一组服务端认可的用户。</p><h3 id="userobject" tabindex="-1"><a class="header-anchor" href="#userobject" aria-hidden="true">#</a> UserObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;encryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>id</code>: string</p></blockquote>`,16),h=n("blockquote",null,[n("p",null,[n("code",null,"encryption"),s(': "none"')])],-1),q=n("p",null,[s("现阶段需要填 "),n("code",null,'"none"'),s("，不能留空。该要求是为了提醒使用者没有加密，也为了以后出加密方式时，防止使用者填错属性名或填错位置导致裸奔。")],-1),_=n("p",null,"若未正确设置 encryption 的值，使用 v2ray 或 -test 时会收到错误信息。",-1),g=n("blockquote",null,[n("p",null,[n("code",null,"level"),s(": number")])],-1),f=t(`<h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@v2fly.org&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;decryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;fallbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>clients</code>: [ <a href="#clientobject">ClientObject</a> ]</p></blockquote><p>一组服务端认可的用户。</p><blockquote><p><code>decryption</code>: &quot;none&quot;</p></blockquote><p>注意这里是 decryption，和 clients 同级。现阶段同样需要填 <code>&quot;none&quot;</code>，不能留空。decryption 和 encryption 的位置不同，是因为若套一层约定加密，服务端需要先解密才能知道是哪个用户。</p><p>若未正确设置 decryption 的值，使用 v2ray 或 -test 时会收到错误信息。</p><blockquote><p><code>fallbacks</code>: [ <a href="#fallbackobject">FallbackObject</a> ]</p></blockquote><p>一个数组，包含一系列强大的回落分流配置（可选）。</p><h3 id="clientobject" tabindex="-1"><a class="header-anchor" href="#clientobject" aria-hidden="true">#</a> ClientObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@v2fly.org&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>id</code>: string</p></blockquote>`,12),y=n("blockquote",null,[n("p",null,[n("code",null,"level"),s(": number")])],-1),j=t(`<blockquote><p><code>email</code>: string</p></blockquote><p>用户邮箱，用于区分不同用户的流量（日志、统计）。</p><h2 id="fallbackobject" tabindex="-1"><a class="header-anchor" href="#fallbackobject" aria-hidden="true">#</a> FallbackObject</h2><p>协议回落</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;alpn&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
    <span class="token property">&quot;xver&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>fallbacks</code> 是一个数组（v4.27.2+），这里是其中一个子元素的配置说明，参数不同于以前的 fallback 项。</strong></p><p><code>fallbacks</code> 项是可选的，只能用于 TCP+TLS 传输组合</p>`,7),x=n("code",null,'"alpn":["http/1.1"]',-1),S=t("<p>通常，你需要先设置一组 <code>alpn</code> 和 <code>path</code> 均省略或为空的默认回落，然后再按需配置其它分流。</p><p>VLESS 会把 TLS 解密后首包长度 &lt; 18 或协议版本无效、身份认证失败的流量转发到 <code>dest</code> 指定的地址。</p><p>其它传输组合必须删掉 <code>fallbacks</code> 项或所有子元素，此时也不会开启 Fallback，VLESS 会等待读够所需长度，协议版本无效或身份认证失败时，将直接断开连接。</p><blockquote><p><code>alpn</code>: string</p></blockquote><p>尝试匹配 TLS ALPN 协商结果，空为任意，默认为 &quot;&quot;</p><p>有需要时，VLESS 才会尝试读取 TLS ALPN 协商结果，若成功，输出 info <code>realAlpn =</code> 到日志。</p><p>用途：解决了 Nginx 的 h2c 服务不能同时兼容 http/1.1 的问题，Nginx 需要写两行 listen，分别用于 1.1 和 h2c。</p>",7),T=n("code",null,'"h2"',-1),L=n("code",null,'"alpn":["h2","http/1.1"]',-1),P=t('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Fallback 内设置的 &quot;alpn&quot; 是匹配实际协商出的 ALPN，而 Inbound TLS 设置的 &quot;alpn&quot; 是握手时可选的 ALPN 列表，两者含义不同。</p></div><blockquote><p><code>path</code>: string</p></blockquote><p>尝试匹配首包 HTTP PATH，空为任意，默认为空，非空则必须以 <code>&quot;/&quot;</code> 开头，不支持 h2c。</p><p>智能：有需要时，VLESS 才会尝试看一眼 PATH（不超过 55 个字节；最快算法，并不完整解析 HTTP），若成功，输出 info <code>realPath =</code> 到日志。</p>',4),I={href:"https://github.com/badO1a5A90/v2ray-doc/blob/master/v2ray%20speed%20test%20v4.27.2.md",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,[s("注意："),n("strong",null,"fallbacks 所在入站本身必须是 TCP+TLS"),s("，这是分流至其它 WS 入站用的，被分流的入站则无需配置 TLS。")],-1),E=n("blockquote",null,[n("p",null,[n("code",null,"dest"),s(": string | number")])],-1),O=n("p",null,"决定 TLS 解密后 TCP 流量的去向，目前支持两类地址：（该项必填，否则无法启动）",-1),C=n("li",null,[s("TCP，格式为 "),n("code",null,'"addr:port"'),s("，其中 addr 支持 IPv4、域名、IPv6，若填写域名，也将直接发起 TCP 连接（而不走内置的 DNS）。")],-1),N=n("code",null,'"/dev/shm/domain.socket"',-1),A=n("code",null,'"@"',-1),w={href:"https://www.man7.org/linux/man-pages/man7/unix.7.html",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,'"@@"',-1),R=n("p",null,[s("若只填 port，数字或字符串均可，形如 "),n("code",null,"80"),s("、"),n("code",null,'"80"'),s("，通常指向一个明文 http 服务（addr 会被补为 "),n("code",null,'"127.0.0.1"'),s("）。")],-1),B=n("blockquote",null,[n("p",null,[n("code",null,"xver"),s(": number")])],-1),H={href:"https://www.haproxy.org/download/2.2/doc/proxy-protocol.txt",target:"_blank",rel:"noopener noreferrer"},D=n("p",null,"目前填 1 或 2，功能完全相同，只是结构不同，且前者可打印，后者为二进制。V2Ray 的 TCP 和 WS 入站均已支持接收 PROXY protocol。",-1),F={class:"custom-container tip"},W=n("p",{class:"custom-container-title"},"TIP",-1),X={href:"https://docs.nginx.com/nginx/admin-guide/load-balancer/using-proxy-protocol/#configuring-nginx-to-accept-the-proxy-protocol",target:"_blank",rel:"noopener noreferrer"},Y=n("p",null,[n("strong",null,"补充说明")],-1),G=n("ol",null,[n("li",null,"将匹配到最精确的子元素，与子元素的排列顺序无关。若配置了几个 alpn 和 path 均相同的子元素，则会以最后的为准。"),n("li",null,"回落分流均是解密后 TCP 层的转发，而不是 HTTP 层，只在必要时检查首包 PATH。"),n("li",null,"不支持按域名分流。若有此需求，建议前置 Nginx 等并配置 stream SNI 分流。")],-1);function M(z,J){const o=p("RouterLink"),l=p("ExternalLinkIcon");return i(),u("div",null,[d,b,k,v,n("p",null,[s("与 "),e(o,{to:"/config/protocols/vmess.html"},{default:a(()=>[s("VMess")]),_:1}),s(" 不同，VLESS 不依赖于系统时间，认证方式同样为 UUID，但不需要 alterId。")]),m,n("p",null,[s("VLESS 的用户 ID，必须是一个合法的 UUID，你可以用 "),e(o,{to:"/awesome/tools.html#%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7"},{default:a(()=>[s("在线工具")]),_:1}),s(" 生成它。")]),h,q,_,g,n("p",null,[s("用户等级，详见 "),e(o,{to:"/config/policy.html"},{default:a(()=>[s("本地策略")]),_:1}),s("。")]),f,n("p",null,[s("VLESS 的用户 ID，必须是一个合法的 UUID，你也可以用 "),e(o,{to:"/guide/command.html#v2ctl"},{default:a(()=>[s("V2Ctl")]),_:1}),s(" 生成它。")]),y,n("p",null,[s("用户等级，详见 "),e(o,{to:"/config/policy.html"},{default:a(()=>[s("本地策略")]),_:1}),s("。")]),j,n("ul",null,[n("li",null,[s("该项有子元素时，"),e(o,{to:"/config/transport.html#tlsobject"},{default:a(()=>[s("Inbound TLS")]),_:1}),s(" 需设置 "),x,s("。**")])]),S,n("p",null,[s("注意：fallbacks alpn 存在 "),T,s(" 时，"),e(o,{to:"/config/transport.html#tlsobject"},{default:a(()=>[s("Inbound TLS")]),_:1}),s(" 需设置 "),L,s("，以支持 h2 访问。")]),P,n("p",null,[s("用途：分流其它 inbound 的 WebSocket 流量或 HTTP 伪装流量，没有多余处理、纯粹转发流量，"),n("a",I,[s("实测比 Nginx 反代更强"),e(l)]),s("。")]),V,E,O,n("ol",null,[C,n("li",null,[s("Unix domain socket，格式为绝对路径，形如 "),N,s("，可在开头加 "),A,s(" 代表 "),n("a",w,[s("abstract"),e(l)]),s("，"),U,s(" 则代表带 padding 的 abstract。")])]),R,B,n("p",null,[s("发送 "),n("a",H,[s("PROXY protocol"),e(l)]),s("，专用于传递请求的真实来源 IP 和端口，填版本 1 或 2，默认为 0，即不发送。若有需要建议填 1。")]),D,n("div",F,[W,n("p",null,[s("若你正在 "),n("a",X,[s("配置 Nginx 接收 PROXY protocol"),e(l)]),s("，除了设置 proxy_protocol 外，还需设置 set_real_ip_from，否则可能会出问题。")])]),Y,G])}const Q=c(r,[["render",M],["__file","vless.html.vue"]]);export{Q as default};
