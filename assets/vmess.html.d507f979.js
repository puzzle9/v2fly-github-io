import{_ as p,r as c,o as u,c as l,a as s,d as a,w as o,b as n,e as t}from"./app.9655d571.js";const i={},r=s("h1",{id:"vmess",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#vmess","aria-hidden":"true"},"#"),n(" VMess")],-1),d=s("ul",null,[s("li",null,[n("名称："),s("code",null,"vmess")]),s("li",null,"类型：入站 / 出站")],-1),b=t(`<p>VMess 依赖于系统时间，请确保使用 V2Ray 的系统 UTC 时间误差在 90 秒之内，时区无关。在 Linux 系统中可以安装<code>ntp</code>服务来自动同步系统时间。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>在 v4.28.1 版本后，客户端 AlterID 设置为 0 代表启用 VMessAEAD ；服务端为自动适配，可同时兼容启用和未开启 VMessAEAD 的客户端。</p><p>对于 VMess MD5 认证信息的兼容可以被关闭。(v4.35.0+)</p></div><p>VMess 的配置分为两部分，<code>InboundConfigurationObject</code>和<code>OutboundConfigurationObject</code>，分别对应入站和出站协议配置中的<code>settings</code>项。</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;vnext&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">37192</span><span class="token punctuation">,</span>
            <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;security&quot;</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>vnext</code>：[ <a href="#serverobject">ServerObject</a> ]</p></blockquote><p>一个数组，包含一系列的服务器配置</p><h3 id="serverobject" tabindex="-1"><a class="header-anchor" href="#serverobject" aria-hidden="true">#</a> ServerObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">37192</span><span class="token punctuation">,</span>
    <span class="token property">&quot;users&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>服务器地址，支持 IP 地址或者域名。</p><blockquote><p><code>port</code>: number</p></blockquote><p>服务器端口号。</p><blockquote><p><code>users</code>: [ <a href="#userobject">UserObject</a> ]</p></blockquote><p>一组服务器认可的用户</p><h3 id="userobject" tabindex="-1"><a class="header-anchor" href="#userobject" aria-hidden="true">#</a> UserObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;security&quot;</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>id</code>：string</p></blockquote><p>VMess 用户的主 ID。必须是一个合法的 UUID。</p><blockquote><p><code>alterId</code>：number</p></blockquote><p>为了进一步防止被探测，一个用户可以在主 ID 的基础上，再额外生成多个 ID。这里只需要指定额外的 ID 的数量，推荐值为 0 代表启用 VMessAEAD。不指定的话，默认值是 <code>0</code>。最大值 <code>65535</code>。这个值不能超过服务器端所指定的值。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>客户端可通过设置环境变量 <code>V2RAY_VMESS_AEAD_DISABLED=true</code> 强行禁用 VMessAEAD （不推荐，仅用于兼容服务端版本在 v4.28.1 前<strong>且</strong>设置了 <code>alterId=0</code> ）</p></div><blockquote><p><code>level</code>: number</p></blockquote><p>用户等级</p><blockquote><p><code>security</code>: &quot;aes-128-gcm&quot; | &quot;chacha20-poly1305&quot; | &quot;auto&quot; | &quot;none&quot; | &quot;zero&quot;</p></blockquote><p>加密方式，客户端将使用配置的加密方式发送数据，服务器端自动识别，无需配置。</p><ul><li><code>&quot;aes-128-gcm&quot;</code>：推荐在 PC 上使用</li><li><code>&quot;chacha20-poly1305&quot;</code>：推荐在手机端使用</li><li><code>&quot;auto&quot;</code>：默认值，自动选择（运行框架为 AMD64、ARM64 或 s390x 时为 aes-128-gcm 加密方式，其他情况则为 Chacha20-Poly1305 加密方式）</li><li><code>&quot;none&quot;</code>：不加密</li><li><code>&quot;zero&quot;</code>：不加密，也不进行消息认证 (v4.35.0+)</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>推荐使用<code>&quot;auto&quot;</code>加密方式，这样可以永久保证安全性和兼容性。</p><p><code>&quot;none&quot;</code> 伪加密方式会计算并验证数据包的校验数据，由于认证算法没有硬件支持，在部分平台可能速度比有硬件加速的 <code>&quot;aes-128-gcm&quot;</code> 还慢。</p><p><code>&quot;zero&quot;</code> 伪加密方式不会加密消息也不会计算数据的校验数据，因此理论上速度会高于其他任何加密方式。实际速度可能受到其他因素影响。</p><p>不推荐在未开启 TLS 加密并强制校验证书的情况下使用 <code>&quot;none&quot;</code> <code>&quot;zero&quot;</code> 伪加密方式。 如果使用 CDN 或其他会解密 TLS 的中转平台或网络环境建立连接，不建议使用 <code>&quot;none&quot;</code> <code>&quot;zero&quot;</code> 伪加密方式。</p><p>无论使用哪种加密方式， VMess 的包头都会受到加密和认证的保护。</p></div><blockquote><p><code>experiments</code>: string</p></blockquote><p>启用的 VMess 协议实验性功能。（此处的功能为不稳定功能， 可能随时被移除）多个启用的实验之间可以用 | 字符分割，如 <code>&quot;AuthenticatedLength|NoTerminationSignal&quot;</code> 。</p><p><code>&quot;AuthenticatedLength&quot;</code> 启用认证的数据包长度实验。此实验需要同时在客户端与服务器端同时开启，并运行相同版本的程序。 (v4.41.0+)</p><p><code>&quot;NoTerminationSignal&quot;</code> 启用不发送断开连接标致实验。此实验可能会影响被代理的连接的稳定性。 (v4.41.0+)</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@v2ray.com&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;detour&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tag_to_detour&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;disableInsecureEncryption&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>clients</code>: [ <a href="#clientobject">ClientObject</a> ]</p></blockquote><p>一组服务器认可的用户。clients 可以为空。当此配置用作动态端口时，V2Ray 会自动创建用户。</p><blockquote><p><code>detour</code>: <a href="#detourobject">DetourObject</a></p></blockquote><p>指示对应的出站协议使用另一个服务器。</p><blockquote><p><code>default</code>: <a href="#defaultobject">DefaultObject</a></p></blockquote><p>可选，clients 的默认配置。仅在配合<code>detour</code>时有效。</p><blockquote><p><code>disableInsecureEncryption</code>: true | false</p></blockquote><p>是否禁止客户端使用不安全的加密方式，当客户端指定下列加密方式时，服务器会主动断开连接。默认值为<code>false</code>。</p><ul><li><code>&quot;none&quot;</code></li><li><code>&quot;aes-128-cfb&quot;</code></li></ul><h3 id="clientobject" tabindex="-1"><a class="header-anchor" href="#clientobject" aria-hidden="true">#</a> ClientObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;27848739-7e62-4138-9fd3-098a63964b6b&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@v2ray.com&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>id</code>: string</p></blockquote><p>VMess 的用户 ID。必须是一个合法的 UUID。</p><blockquote><p><code>level</code>: number</p></blockquote>`,48),v=t(`<blockquote><p><code>alterId</code>: number</p></blockquote><p>与上文出站协议中的含义相同。</p><blockquote><p><code>email</code>: string</p></blockquote><p>用户邮箱地址，用于区分不同用户的流量。</p><h3 id="detourobject" tabindex="-1"><a class="header-anchor" href="#detourobject" aria-hidden="true">#</a> DetourObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tag_to_detour&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>to</code>: string</p></blockquote>`,7),k=s("code",null,"tag",-1),q=t(`<h3 id="defaultobject" tabindex="-1"><a class="header-anchor" href="#defaultobject" aria-hidden="true">#</a> DefaultObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>level</code>: number</p></blockquote><p>用户等级，意义同上。默认值为<code>0</code>。</p><blockquote><p><code>alterId</code>: number</p></blockquote><p>动态端口的默认<code>alterId</code>，默认值为<code>0</code>。</p><h2 id="vmess-md5-认证信息-玷污机制" tabindex="-1"><a class="header-anchor" href="#vmess-md5-认证信息-玷污机制" aria-hidden="true">#</a> VMess MD5 认证信息 玷污机制</h2><p>为了进一步对抗可能的探测和封锁，自 v4.24 版本起，每个 VMess 认证数据的服务器端结构都会包含一个一次写入的玷污状态标记，初始状态为无瑕状态，当服务器检测到重放探测时或者因为其他原因入站连接出错以致校验数据不正确时，该连接所对应的请求认证数据会被玷污。</p><p>被玷污的认证数据无法被用于建立连接，当攻击者或客户端使用被玷污的认证数据建立连接时，服务器会输出包含 &quot;invalid user&quot; &quot;ErrTainted&quot; 的错误信息，并阻止该连接。</p><p>当服务器没有受到重放攻击时，该机制对正常连接的客户端没有影响。如果服务器正在被重放攻击，可能会出现连接不稳定的情况。</p><p>拥有服务器 UUID 以及其他连接数据的恶意程序可能根据此机制对服务器发起拒绝服务攻击，受到此类攻击的服务可以通过修改 proxy/vmess/validator.go 文件中 func (v *TimedUserValidator) BurnTaintFuse(userHash []byte) error 函数的 atomic.CompareAndSwapUint32(pair.taintedFuse, 0, 1) 语句为 atomic.CompareAndSwapUint32(pair.taintedFuse, 0, 0) 来解除服务器对此类攻击的安全保护机制。使用 VMessAEAD 认证机制的客户端不受到 VMess MD5 认证信息 玷污机制 的影响。</p><h2 id="vmess-md5-认证信息-淘汰机制" tabindex="-1"><a class="header-anchor" href="#vmess-md5-认证信息-淘汰机制" aria-hidden="true">#</a> VMess MD5 认证信息 淘汰机制</h2><p>VMessAEAD 协议已经经过同行评议并已经整合了相应的修改。 VMess MD5 认证信息 的淘汰机制已经启动。</p><p>自 2022 年 1 月 1 日起，服务器端将默认禁用对于 MD5 认证信息 的兼容。任何使用 MD5 认证信息的客户端将无法连接到禁用 VMess MD5 认证信息的服务器端。</p><p>在服务器端可以通过设置环境变量 <code>v2ray.vmess.aead.forced</code> = <code>true</code> 以关闭对于 MD5 认证信息的兼容。 或者 <code>v2ray.vmess.aead.forced</code> = <code>false</code> 以强制开启对于 MD5 认证信息 认证机制的兼容 （不受到 2022 年自动禁用机制的影响） 。 (v4.35.0+)</p>`,15);function m(h,g){const e=c("RouterLink");return u(),l("div",null,[r,d,s("p",null,[a(e,{to:"/developer/protocols/vmess.html"},{default:o(()=>[n("VMess")]),_:1}),n(" 是一个加密传输协议，它分为入站和出站两部分，通常作为 V2Ray 客户端和服务器之间的桥梁。")]),b,s("p",null,[n("用户等级，详见"),a(e,{to:"/config/policy.html"},{default:o(()=>[n("本地策略")]),_:1})]),v,s("p",null,[n("一个入站协议的"),k,n("，详见 "),a(e,{to:"/config/inbounds.html#inboundobject"},{default:o(()=>[n("InboundObject")]),_:1}),n(" 。指定的入站协议必须是一个 VMess")]),q])}const f=p(i,[["render",m],["__file","vmess.html.vue"]]);export{f as default};
